<?php

$arr = [3,4,234,345,63,22,35,2,1,35];

//选择排序也是一种简单直观的排序算法。它的工作原理很容易理解：初始时在序列中找到最小（大）元素，放到序列的起始位置作为已排序序列；
//然后，再从剩余未排序元素中继续寻找最小（大）元素，放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。

//注意选择排序与冒泡排序的区别：冒泡排序通过依次交换相邻两个顺序不合法的元素位置，从而将当前最小（大）元素放到合适的位置；
//而选择排序每遍历一次都记住了当前最小（大）元素的位置，最后仅需一次交换操作即可将其放到合适的位置。

function selectSort($arr)
{
// 分类 -------------- 内部比较排序
// 数据结构 ---------- 数组
// 最差时间复杂度 ---- O(n^2)
// 最优时间复杂度 ---- O(n^2)
// 平均时间复杂度 ---- O(n^2)
// 所需辅助空间 ------ O(1)
// 稳定性 ------------ 不稳定

    for($i=0;$i<count($arr)-1;$i++){
        $min = $i;
        for($j=$i+1;$j<count($arr);$j++){
            if($arr[$j] < $arr[$min]){
                $min = $j;
            }
        }
        var_dump("找到最小的为".$arr[$min]);
        if($min != $i){
            $tmp = $arr[$i];
            $arr[$i] = $arr[$min];
            $arr[$min] = $tmp;
        }
        echo "排序后".join(',',$arr)."<br />";
    }
    return $arr;
}

echo join(',',$arr);
echo "<br />";
$res = selectSort($arr);
echo join(',',$res);